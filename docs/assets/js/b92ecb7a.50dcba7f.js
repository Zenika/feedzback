"use strict";(self.webpackChunkfeedzback_docs=self.webpackChunkfeedzback_docs||[]).push([[516],{9571:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=s(4848),t=s(8453);const a={title:"Client app"},r="Update client app",l={id:"update/client",title:"Client app",description:"You can update the Angular framework dependencies by following the instructions provided by Angular.",source:"@site/docs/update/client.md",sourceDirName:"update",slug:"/update/client",permalink:"/feedzback/docs/update/client",draft:!1,unlisted:!1,editUrl:"https://github.com/Zenika/feedzback/tree/main/docs-source/docs/update/client.md",tags:[],version:"current",frontMatter:{title:"Client app"},sidebar:"default",previous:{title:"Usage analytics",permalink:"/feedzback/docs/ci-cd/usage-analytics"},next:{title:"Documentation",permalink:"/feedzback/docs/documentation"}},d={},c=[{value:"Create Angular app",id:"create-angular-app",level:2},{value:"Generate environments",id:"generate-environments",level:2},{value:"Add Localize",id:"add-localize",level:2},{value:"Add Material",id:"add-material",level:2},{value:"Add Tailwind",id:"add-tailwind",level:2},{value:"Add ESLint and Prettier",id:"add-eslint-and-prettier",level:2},{value:"Using Jest instead of Karma/Jasmine",id:"using-jest-instead-of-karmajasmine",level:2},{value:"Add other packages",id:"add-other-packages",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"update-client-app",children:"Update client app"}),"\n",(0,i.jsxs)(n.p,{children:["You can update the Angular framework dependencies by following the ",(0,i.jsx)(n.a,{href:"https://angular.dev/update",children:"instructions provided by Angular"}),".\nOther dependencies can be updated manually."]}),"\n",(0,i.jsx)(n.p,{children:"The rest of the document describes how to recreate all the dependencies from scratch.\nThis is very useful for understanding the links between dependencies."}),"\n",(0,i.jsx)(n.h2,{id:"create-angular-app",children:"Create Angular app"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm install -g @angular/cli\n\nng new client --style scss --view-encapsulation None --ssr false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"generate-environments",children:"Generate environments"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"ng generate environments\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-localize",children:"Add Localize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"ng add @angular/localize\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-material",children:"Add Material"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"ng add @angular/material --theme custom --animations --typography\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Move generated content (related to Material) from ",(0,i.jsx)(n.code,{children:"src/styles.scss"})," to ",(0,i.jsx)(n.code,{children:"src/styles/material.scss"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:"src/styles.scss"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:"@import './styles/material.scss';\n\nhtml,\nbody {\n  height: 100%;\n}\nbody {\n  margin: 0;\n  font-family: Nunito, sans-serif;\n}\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Nunito"})," font dependency is listed in ",(0,i.jsx)(n.a,{href:"#add-other-packages",children:"other packages"})," below."]})}),"\n",(0,i.jsx)(n.h2,{id:"add-tailwind",children:"Add Tailwind"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm install -D tailwindcss postcss autoprefixer\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"tailwind.config.ts"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import type { Config } from 'tailwindcss';\n\nexport default {\n  content: ['./src/**/*.{html,ts}'],\n\n  corePlugins: {\n    // Warning: Tailwind \"Preflight\" breaks some Angular material components\n    //\n    // Learn more about this issue and a hack to solve it:\n    //    https://github.com/tailwindlabs/tailwindcss/discussions/9993\n    //\n    // The hack is available here: `src/styles/tailwind.css`\n    preflight: false,\n  },\n\n  theme: {\n    extend: {},\n  },\n\n  plugins: [],\n} satisfies Config;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"src/styles/tailwind.css"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:"src/styles.scss"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:"@import './styles/tailwind.css';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-eslint-and-prettier",children:"Add ESLint and Prettier"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"ng add @angular-eslint/schematics\n\nnpm i -D prettier eslint-config-prettier eslint-plugin-prettier prettier-plugin-organize-imports prettier-plugin-tailwindcss\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:".eslintrc.json"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "extends": ["prettier"],\n  "plugins": ["prettier"],\n  "rules": {\n    "prettier/prettier": "warn",\n    "arrow-body-style": "off",\n    "prefer-arrow-callback": "off"\n  },\n  "overrides": [\n    {\n      "files": ["*.ts"], // <-- existing line\n      "extends": ["plugin:prettier/recommended"],\n      "rules": {\n        "@angular-eslint/no-host-metadata-property": ["off"],\n        "prettier/prettier": "warn"\n      }\n    },\n    {\n      "files": ["*.html"], // <-- existing line\n      "extends": ["plugin:prettier/recommended"],\n      "rules": {\n        "prettier/prettier": "warn"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Only the lines added are reported here."})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:'"@angular-eslint/no-host-metadata-property"'})," rule is turned off to reflect the latest Angular best pratices.",(0,i.jsx)("br",{}),"\nMore info on this ",(0,i.jsx)(n.a,{href:"https://github.com/angular/angular/issues/54284",children:"issue"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:".prettierrc.json"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "printWidth": 120,\n  "singleQuote": true,\n  "plugins": ["prettier-plugin-organize-imports", "prettier-plugin-tailwindcss"],\n  "overrides": [\n    {\n      "files": "*.html",\n      "options": {\n        "parser": "angular"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:".prettierignore"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"/.angular\n/coverage\n/dist\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"package.json"})," scripts:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "format": "prettier --write .",\n    "format:check": "prettier --check ."\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"using-jest-instead-of-karmajasmine",children:"Using Jest instead of Karma/Jasmine"}),"\n",(0,i.jsx)(n.p,{children:"First, remove all packages related to Karma and Jasmine. Next, install Jest related packages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm i -D jest @types/jest @angular-builders/jest ts-node\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:"tsconfig.spec.json"})," and ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," files:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "types": ["jest"]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["You need to make this change even for the ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," file, as it is used by the IDE."]})}),"\n",(0,i.jsxs)(n.p,{children:["Update ",(0,i.jsx)(n.code,{children:"angular.json"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "projects": {\n    "client": {\n      "architect": {\n        "test": {\n          "builder": "@angular-builders/jest:run",\n          "options": {\n            "configPath": "jest.config.ts"\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"jest.config.ts"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import type { Config } from 'jest';\n\nexport default {\n  passWithNoTests: true,\n  setupFiles: ['./setup-jest.ts'],\n} satisfies Config;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"setup-jest.ts"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import '@angular/localize/init';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-other-packages",children:"Add other packages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm i @fontsource/nunito canvas-confetti firebase js-cookie @material-symbols/font-600\n\nnpm i -D @types/canvas-confetti @types/js-cookie\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);