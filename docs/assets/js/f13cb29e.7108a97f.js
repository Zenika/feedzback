"use strict";(self.webpackChunkfeedzback_docs=self.webpackChunkfeedzback_docs||[]).push([[2748],{7018:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"technical-guides/e2e-testing","title":"E2E testing","description":"E2E tests are performed using Playwright.","source":"@site/docs/technical-guides/e2e-testing.md","sourceDirName":"technical-guides","slug":"/technical-guides/e2e-testing","permalink":"/feedzback/docs/technical-guides/e2e-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/Zenika/feedzback/tree/main/docs-source/docs/technical-guides/e2e-testing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"default","previous":{"title":"Swagger","permalink":"/feedzback/docs/technical-guides/server/swagger"},"next":{"title":"Quick start","permalink":"/feedzback/docs/ci-cd/quick-start"}}');var r=t(4848),s=t(8453);const a={},o="E2E testing",c={},l=[{value:"NPM scripts",id:"npm-scripts",level:2},{value:"Playwright configuration",id:"playwright-configuration",level:2},{value:"Running Playwright",id:"running-playwright",level:2},{value:"Method 1",id:"method-1",level:3},{value:"Method 2",id:"method-2",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"e2e-testing",children:"E2E testing"})}),"\n",(0,r.jsxs)(n.p,{children:["E2E tests are performed using ",(0,r.jsx)(n.a,{href:"https://playwright.dev/",children:"Playwright"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"npm-scripts",children:"NPM scripts"}),"\n",(0,r.jsxs)(n.p,{children:["To run the tests, open a terminal in ",(0,r.jsx)(n.code,{children:"<rootDir>/client"})," directory and run the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run e2e:test\n"})}),"\n",(0,r.jsxs)(n.p,{children:["All scripts related to E2E tests start with ",(0,r.jsx)(n.code,{children:'"e2e:*"'}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="<rootDir>/client/package.json"',children:'{\n  "scripts": {\n    "e2e:test": "playwright test",\n    "e2e:report": "playwright show-report",\n    "e2e:ui": "playwright test --ui",\n    "e2e:codegen": "playwright codegen"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"playwright-configuration",children:"Playwright configuration"}),"\n",(0,r.jsx)(n.p,{children:"Here's part of the Playwright configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="<rootDir>/client/playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  // Tests are located in the following directory\n  testDir: './e2e',\n\n  // Run your local dev server before starting the tests\n  webServer: {\n    command: 'npm run stack:e2e',\n    port: 4200,\n    reuseExistingServer: !process.env['CI'],\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Before starting the tests, Playwright executes the command ",(0,r.jsx)(n.code,{children:"npm run stack:e2e"})," and waits for the application to be available on port ",(0,r.jsx)(n.code,{children:"4200"}),".\nDue to the ",(0,r.jsx)(n.code,{children:"reuseExistingServer"})," option (enabled for non-CI environment), the command will not be executed if the application is already available."]}),"\n",(0,r.jsxs)(n.p,{children:["Therefore, you can run the command ",(0,r.jsx)(n.code,{children:"npm run stack:e2e"})," in one terminal, wait for the application to be available on port ",(0,r.jsx)(n.code,{children:"4200"}),", and then run the command ",(0,r.jsx)(n.code,{children:"npm run e2e:test"})," in another terminal.\nIn this case, Playwright will skip the ",(0,r.jsx)(n.code,{children:"webServer.command"}),", starting the tests immediately."]}),"\n",(0,r.jsx)(n.h2,{id:"running-playwright",children:"Running Playwright"}),"\n",(0,r.jsx)(n.h3,{id:"method-1",children:"Method 1"}),"\n",(0,r.jsx)(n.p,{children:"To have Playwright start the app and the tests, run the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run e2e:test\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsxs)(n.p,{children:["At the end of the tests, Playwright may not stop the ",(0,r.jsx)(n.code,{children:"webServer"}),' properly.\nIf this happens, look for a "ghost" process named ',(0,r.jsx)(n.code,{children:"java"})," and kill it manually."]}),(0,r.jsx)(n.p,{children:"To avoid this problem, use the method 2 instead."})]}),"\n",(0,r.jsx)(n.h3,{id:"method-2",children:"Method 2"}),"\n",(0,r.jsx)(n.p,{children:"To start the app once and then have Playwright only start the tests, run the following commands in two separate terminals:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run stack:e2e # First terminal\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run e2e:test # Second terminal\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["As an alternative to the above command in the first terminal, run ",(0,r.jsx)(n.code,{children:"npm run stack:emulators"}),' instead, to start the app in "watch" mode.']})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);