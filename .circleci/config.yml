version: 2.1

orbs:
  # Pre-configured orb for GCP "gcloud" CLI
  gcp-cli: circleci/gcp-cli@3.1.1

workflows:
  build-and-deploy_staging:
    jobs:
      - prepare-workspace
      - node-install:
          requires:
            - prepare-workspace
          matrix:
            parameters:
              working-directory: ["server", "client"]
      - node-test:
          requires:
            - node-install
          matrix:
            parameters:
              working-directory: ["server", "client"]
      - build-server:
          requires:
            - node-test
          name: building-staging-backend
          context: feedzback-staging
      - deploy-server:
          requires:
            - build-server
          name: deploying-staging-backend
          context: feedzback-staging
          service-name: feedzback-staging

jobs:
  prepare-workspace:
    docker:
      - image: cimg/node:20.9
    steps:
      - run:
          name: Creating workspace directory
          command: mkdir -p workspace
      - checkout:
          path: workspace
      - persist_to_workspace:
          root: workspace
          paths:
            - client
            - server

  node-install:
    parameters:
      working-directory:
        type: string
    docker:
      - image: cimg/node:20.9
    steps:
      - attach_workspace:
          at: workspace
      - restore_cache:
          name: Restoring NPM cache
          keys:
            - npm-deps-{{ checksum "./workspace/<< parameters.working-directory >>/package-lock.json" }}
      - run:
          name: Installing node modules
          working_directory: workspace/<< parameters.working-directory >>
          command: npm ci
      - save_cache:
          name: Storing NPM cache
          key: npm-deps-{{ checksum "./workspace/<< parameters.working-directory >>/package-lock.json" }}
          paths:
            - ./workspace/<< parameters.working-directory >>/node_modules

  node-test:
    parameters:
      working-directory:
        type: string
    docker:
      - image: cimg/node:20.9
    steps:
      - attach_workspace:
          at: workspace
      - restore_cache:
          name: Restoring NPM cache
          keys:
            - npm-deps-{{ checksum "./workspace/<< parameters.working-directory >>/package-lock.json" }}
      - run:
          working_directory: workspace/<< parameters.working-directory >>
          name: Running tests in << parameters.working-directory >>
          # For the moment, passes with no tests
          command: npm run test -- --passWithNoTests

  build-server:
    executor: gcp-cli/google
    steps:
      - gcp-cli/setup
      - checkout
      - run:
          working_directory: server
          name: Submitting Docker image to build
          command: |
            gcloud builds submit --tag ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/feedzback-staging:<< pipeline.git.revision >>

  deploy-server:
    parameters:
      service-name:
        default: feedzback-${CIRCLE_SHA1}
        type: string
    executor: gcp-cli/google
    steps:
      - gcp-cli/setup
      - run:
          working_directory: server
          name: Running gcloud run deploy
          command: |
            # Building update-env-vars argument
            ZZ="CLIENT_URL=https://staging.feedzback.znk.io"
            ZZ="${ZZ},SERVER_PORT=3000"
            ZZ="${ZZ},MAILGUN_USERNAME=${MAILGUN_USERNAME}"
            ZZ="${ZZ},MAILGUN_KEY=${MAILGUN_KEY}"
            ZZ="${ZZ},FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}"
            ZZ="${ZZ},FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}"
            ZZ="${ZZ},FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}"
            gcloud run deploy << parameters.service-name >> --image ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/feedzback-staging:<< pipeline.git.revision >> --allow-unauthenticated  --source . --platform=managed --region=${GOOGLE_COMPUTE_ZONE} --port=3000 --update-env-vars $ZZ
