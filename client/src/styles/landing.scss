// Note: global styles starts with `.gbl-*`.

@use 'sass:color';

@use './variables' as v;
@use './mixins' as m;

// Note: to apply this global CSS class on an Angular component, you can use the dedicated `LandingDirective` directive
// (more infos: src/app/shared/landing/landing.directive.ts)

.gbl-landing {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  gap: 2rem;
  text-align: center;

  @if v.$use-background {
    &::before,
    &::after {
      content: '';
      position: fixed;
      z-index: -1;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }

    &::before {
      background-color: var(--mat-sys-surface);
    }

    &::after {
      background: url(../../public/assets/images/landing-bg.svg) center repeat;
      background-size: 480px;
      opacity: 0.5;
      animation: gblLandingAnim 45s linear infinite;

      @media (prefers-reduced-motion: reduce) {
        animation: none;
      }
    }
  }

  &__title {
    margin: 0;
    font: var(--mat-sys-display-small);
    letter-spacing: var(--mat-sys-display-small-tracking);
    text-wrap: balance;
    color: var(--mat-sys-primary);

    @if v.$use-background {
      padding: 1.5rem 3rem;
      border-radius: 0.5rem;
      background-color: var(--app-landing-title);
    }

    @include m.media-breakpoint-down(sm) {
      padding: 1.5rem;
    }
  }

  &-links {
    margin: 0;
    align-self: normal; // as flex item
    display: flex; // as flex box
    flex-wrap: wrap;
    justify-content: space-evenly;
    gap: 2rem;

    @include m.media-breakpoint-down(sm) {
      flex-wrap: nowrap;
      flex-direction: column;
    }

    &__item {
      cursor: pointer;
      display: inline-flex;
      justify-content: center;
      align-items: center;
      gap: 0.75em;
      padding: 1em 4em;
      box-shadow: 0px 6px 3px -3px rgb(0 0 0 / 0.22);
      border-radius: 1rem;
      border: 1px solid var(--mat-sys-outline-variant);
      background: var(--mat-sys-primary);
      color: var(--mat-sys-on-primary);
      transition: all 150ms ease-in-out;

      @include m.media-breakpoint-down(md) {
        flex-direction: column;
        gap: 0.5em;
      }

      @include m.media-breakpoint-down(sm) {
        padding: 1em 2em;
      }

      &:hover,
      &:disabled {
        box-shadow: none;
        transform: translateY(3px);
      }

      &:disabled {
        opacity: 0.65;
        border-color: var(--mat-sys-outline-variant);
        background-color: var(--mat-sys-surface-container);
        color: var(--mat-sys-on-surface);
        cursor: default;
      }
    }

    &__icon {
      width: 1em !important;
      height: 1em !important;
      font-size: 2.5em;
    }
  }
}

@keyframes gblLandingAnim {
  0% {
    transform: scale(1);
    opacity: 0;
  }
  10% {
    transform: scale(1.1);
    opacity: 0.5;
  }
  90% {
    transform: scale(1.9);
    opacity: 0.15;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

:root {
  --app-landing-title: #{rgba($color: #ffffff, $alpha: 0.7)}; // based on `surface-container-lowest`
}

.gbl-theme-dark {
  --app-landing-title: #{rgba($color: #0a0a0a, $alpha: 0.7)}; // based on `surface-container-lowest`
}
